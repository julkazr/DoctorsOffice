@model DoctorsOffice.ViewModels.PatientCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2 class="dark-text">Create new patient</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="container-fluid">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <form>
        <div class="row">
            <h4 class="col-md-6 dark-text">Personal Info</h4>
            <h4 class="col-md-6 dark-text">Medical Info</h4>
        </div>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                <label class="col-md-6">First Name</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.FirstName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="d-flex flex-row justify-content-between">
                        @Html.EditorFor(model => model.Patient.Height, new { htmlAttributes = new { @class = "form-control input-fields" } }) @Html.DisplayFor(model => model.HeightMetricUnit)
                    </div>
                    @Html.ValidationMessageFor(model => model.Patient.Height, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                <label class="col-md-6">Last Name</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.LastName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="d-flex flex-row justify-content-between">
                        @Html.EditorFor(model => model.Patient.Weight, new { htmlAttributes = new { @class = "form-control input-fields" } }) @Html.DisplayFor(model => model.WeightMetricunit)
                    </div>
                        @Html.ValidationMessageFor(model => model.Patient.Weight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6 col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.Address, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.BloodType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Patient.BloodType, htmlAttributes: new { @class = "form-control input-fields" })
                    @Html.ValidationMessageFor(model => model.Patient.BloodType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                <label class="col-md-6">Phone number</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.DoctorsFullName, "Personal Doctor", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedDoctorID, Model.PersonalDoctorID, "Please select",  new { @class = "form-control input-fields" })
                    @Html.ValidationMessageFor(model => model.Patient.DoctorsFullName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Patient.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.Email, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                <label class="col-md-6">Social Security Number (or LBO)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.PatientSocSecurityNum, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.PatientSocSecurityNum, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>      
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                <label class="col-md-6">Date of Birth</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Patient.DateOfBirth, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Patient.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group dark-text">
            <button type="submit" value="Create" class="btn btn-default dark-blue-bckg light-text">Create</button>
            <strong class="back-link">   |  @Html.ActionLink("Back to List", "Index")</strong>
        </div>
    </form>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
