@model DoctorsOffice.ViewModels.DoctorBriefViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 class="dark-text">Change doctor's info</h2>


@using (Html.BeginForm("Edit", "Doctors", new { id = Model.ID }, FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <form>
            @*<div class="row">
                @if(Model.Files.Any(f => f.FileType == FileType.Avatar)){
        <dt>
            Photo
        </dt>
        <dd>
            <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="avatar" />
        </dd>
    }
            </div>*@
            <div class="row">
                <h4 class="col-md-6 dark-text">Doctor</h4>
                <h4 class="col-md-6 dark-text">Contact info</h4>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group dark-text">
                <button type="submit" value="Save" class="btn btn-default dark-blue-bckg light-text">Save</button>
                <strong class="back-link">   |  @Html.ActionLink("Back to List", "Index")</strong>
            </div>
        </form>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
