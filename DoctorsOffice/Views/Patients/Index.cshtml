@model DoctorsOffice.ViewModels.PatientListViewModel
@using PagedList;
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2 class="dark-text">Patients</h2>

<p class="dark-text text-bold">
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Patients", FormMethod.Get))
{
    <div class="row">
        <p class="col-lg-6 form-inline dark-text text-bold">
            Find patient by name:
            @Html.TextBox("searchByName", Model.NameFilter as string, new { @class = "form-control ml-2 input-fields" })
            <button type="submit" class="btn btn-default ml-2 dark-blue-bckg light-text">Search</button>
        </p>
    </div>
}
<table class="table table-bcg dark-text">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sort = Model.SortByname, searchByName = Model.NameFilter, page = 1})
        </th>
        <th>
            Personal Doctor
        </th>
        <th>
            Phone Number
        </th>
        <th>
            Email
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Patients)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DoctorFirstName) @Html.DisplayFor(modelItem => item.DoctorLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>

            <td class="text-bold">
                @Html.ActionLink("Patients Examinations", "ExaminationList", new { patientId = item.ID }) | 
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>

Page @(Model.Patients.PageCount < Model.Patients.PageNumber ? 0 : Model.Patients.PageNumber) of @Model.Patients.PageCount
@Html.PagedListPager(Model.Patients, page => Url.Action("Index",
                                                        new { page, sort = Model.CurrentSort, searchByName = Model.NameFilter}))
