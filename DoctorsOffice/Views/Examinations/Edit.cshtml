@model DoctorsOffice.ViewModels.ExaminationCRUViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 class="dark-text">Examination</h2>


@using (Html.BeginForm("Edit", "Examinations", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="container-fluid">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ExaminationID)
    <form>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.PatientID, "Patient", htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedPatientID, Model.PatientID, Model.GetFullPatientsName, htmlAttributes: new { @class = "form-control input-fields" })
                    @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.ExamDate, htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExamDate, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.ExamDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.ExamDoctorID, "Doctor", htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedDoctorID, Model.ExamDoctorID, Model.GetFullDoctorsName, htmlAttributes: new { @class = "form-control input-fields" })
                    @Html.ValidationMessageFor(model => model.ExamDoctorID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6 dark-text">
                @Html.LabelFor(model => model.Diagnose, htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Diagnose, new { htmlAttributes = new { @class = "form-control input-fields" } })
                    @Html.ValidationMessageFor(model => model.Diagnose, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col dark-text">
                @Html.LabelFor(model => model.LabResult, htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col">
                    @Html.TextAreaFor(model => model.LabResult, new { @class = "form-control input-fields", @rows = 10 })
                    @Html.ValidationMessageFor(model => model.LabResult, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col dark-text">
                @Html.LabelFor(model => model.ExamResult, htmlAttributes: new { @class = "control-label col-md-2 text-bold" })
                <div class="col">
                    @Html.TextAreaFor(model => model.ExamResult, new { @class = "form-control input-fields", @rows = 20 })
                    @Html.ValidationMessageFor(model => model.ExamResult, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row no-print">
            <div class="col-md-6 form-group dark-text">
                @Html.Label("Upload exams files: ", new { @class = "control-label col-md-10" })<br />
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.File.MultipleFileUpload, new { type = "file", multiple = "multiple" })
                    @Html.ValidationMessageFor(model => model.File.MultipleFileUpload, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group dark-text no-print">
            <button type="submit" value="Save" class="btn btn-default dark-blue-bckg light-text">Save</button>   |
            <button id="btnEditPrint" class="btn btn-default dark-blue-bckg light-text">Print</button>
            <strong class="back-link">   |  @Html.ActionLink("Back to List", "Index")</strong>
        </div>
    </form>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    `<script>
        $(function() {
            $("#btnEditPrint").click(function() {
                window.print();
            });
        });
</script>
}
