@model DoctorsOffice.Data.Patient

@{
    ViewBag.Title = "Edit";
}

<h2 class="dark-text">Change patient's info</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container-fluid">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <form>
            <div class="row">
                <h4 class="col-md-6 dark-text">Personal Info</h4>
                <h4 class="col-md-6 dark-text">Medical Info</h4>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 col-md-6 dark-text">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.BloodType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.BloodType, htmlAttributes: new { @class = "form-control input-fields" })
                        @Html.ValidationMessageFor(model => model.BloodType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.PersonalDoctorID, "PersonalDoctorID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PersonalDoctorID", null, htmlAttributes: new { @class = "form-control input-fields" })
                        @Html.ValidationMessageFor(model => model.PersonalDoctorID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.PatientSocialSecurityNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PatientSocialSecurityNumber, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.PatientSocialSecurityNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group dark-text">
                <button type="submit" value="Save" class="btn btn-default dark-blue-bckg light-text">Save</button>
                <strong class="back-link">   |  @Html.ActionLink("Back to List", "Index")</strong>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
