@model DoctorsOffice.ViewModels.DoctorCreateViewModel
@{
    ViewBag.Title = "Create";
}

<h2 class="dark-text">Create new doctor</h2>


@using (Html.BeginForm("Create", "Doctors", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <form>
            <div class="row">
                <h4 class="col-md-6 dark-text">Doctor</h4>
                <h4 class="col-md-6 dark-text">Contact info</h4>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.FirstName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.Address, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.LastName, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.Position, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.Position, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 dark-text">
                    @Html.LabelFor(model => model.Doctor.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Doctor.Email, new { htmlAttributes = new { @class = "form-control input-fields" } })
                        @Html.ValidationMessageFor(model => model.Doctor.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group dark-text">
                    @Html.Label("Photo", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*<input type="file" id="Picture" name="upload" />*@
                        @Html.TextBoxFor(model => model.Image.ImgUpload, new { type = "file", name = "upload" })
                        @Html.ValidationMessageFor(model => model.Image.ImgUpload, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group dark-text">
                <button type="submit" value="Create" class="btn btn-default dark-blue-bckg light-text">Create</button>
                <strong class="back-link">   |  @Html.ActionLink("Back to List", "Index")</strong>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
